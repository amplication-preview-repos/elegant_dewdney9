/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AdditionalSettings as PrismaAdditionalSettings,
} from "@prisma/client";

export class AdditionalSettingsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AdditionalSettingsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.additionalSettings.count(args);
  }

  async additionalSettingsItems<
    T extends Prisma.AdditionalSettingsFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.AdditionalSettingsFindManyArgs>
  ): Promise<PrismaAdditionalSettings[]> {
    return this.prisma.additionalSettings.findMany<Prisma.AdditionalSettingsFindManyArgs>(
      args
    );
  }
  async additionalSettings<T extends Prisma.AdditionalSettingsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdditionalSettingsFindUniqueArgs>
  ): Promise<PrismaAdditionalSettings | null> {
    return this.prisma.additionalSettings.findUnique(args);
  }
  async createAdditionalSettings<T extends Prisma.AdditionalSettingsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdditionalSettingsCreateArgs>
  ): Promise<PrismaAdditionalSettings> {
    return this.prisma.additionalSettings.create<T>(args);
  }
  async updateAdditionalSettings<T extends Prisma.AdditionalSettingsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdditionalSettingsUpdateArgs>
  ): Promise<PrismaAdditionalSettings> {
    return this.prisma.additionalSettings.update<T>(args);
  }
  async deleteAdditionalSettings<T extends Prisma.AdditionalSettingsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdditionalSettingsDeleteArgs>
  ): Promise<PrismaAdditionalSettings> {
    return this.prisma.additionalSettings.delete(args);
  }
}
